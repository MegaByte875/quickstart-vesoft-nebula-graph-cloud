AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy NebulaGraph on Amazon Web Services in a new VPC.
Metadata:
  LICENSE: Apache License Version 2.0
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - VPCID
          - VPCCIDR
          - PrivateSubnet1AID
          - PrivateSubnet2AID
          - PrivateSubnet3AID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PublicSubnet3ID
          - RemoteAccessCIDR
          - AccessCIDR
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
      - Label:
          default: Bastion configuration
        Parameters:
          - BastionAMIOS
          - BastionInstanceType
      - Label:
          default: NebulaGraph configuration
        Parameters:
          - NebulaGraphVersion
          - ClusterName
          - GraphNodeCount
          - GraphInstanceType
          - GraphVolumeType
          - GraphVolumeSize
          - MetaNodeCount
          - MetaInstanceType
          - MetaVolumeType
          - MetaVolumeSize
          - StorageNodeCount
          - StorageInstanceType
          - StorageVolumeType
          - StorageVolumeSize
      - Label:
          default: Explorer configuration
        Parameters:
          - EnableExplorer
          - ExplorerInstanceType
      - Label:
          default: Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      VPCID:
        default: VPC ID
      VPCCIDR:
        default: VPC CIDR
      PrivateSubnet1AID:
        default: Private subnet 1 ID
      PrivateSubnet2AID:
        default: Private subnet 2 ID
      PrivateSubnet3AID:
        default: Private subnet 3 ID
      PublicSubnet1ID:
        default: Public subnet 1 ID
      PublicSubnet2ID:
        default: Public subnet 2 ID
      PublicSubnet3ID:
        default: Public subnet 3 ID
      RemoteAccessCIDR:
        default: Allowed bastion external access CIDR
      AccessCIDR:
        default: Permitted IP range
      KeyPairName:
        default: Key-pair name
      BastionAMIOS:
        default: Bastion AMI OS
      BastionInstanceType:
        default: Bastion instance type
      NebulaGraphVersion:
        default: NebulaGraph version
      ClusterName:
        default: NebulaGraph cluster Name
      GraphNodeCount:
        default: Number of Graph nodes
      GraphInstanceType:
        default: Graph Node Instance Type
      GraphVolumeType:
        default: Volume type of Graph nodes
      GraphVolumeSize:
        default: Volume size of Graph nodes
      MetaNodeCount:
        default: Number of Meta nodes
      MetaInstanceType:
        default: Meta Node Instance Type
      MetaVolumeType:
        default: Volume type of Meta nodes
      MetaVolumeSize:
        default: Volume size of Meta nodes
      StorageNodeCount:
        default: Number of Storage nodes
      StorageInstanceType:
        default: Storage Node Instance Type
      StorageVolumeType:
        default: Volume type of Storage nodes
      StorageVolumeSize:
        default: Volume size of Storage nodes
      EnableExplorer:
        default: Enable Explorer
      ExplorerInstanceType:
        default: Explorer Instance Type
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket Region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
Parameters:
  VPCID:
    Description: Existing VPC ID.
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid IP range in the form x.x.x.x/x.
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC.
    Type: String
  PrivateSubnet1AID:
    Description: Private subnet 1 ID.
    Type: String
  PrivateSubnet2AID:
    Description: (Please ignore if the number of Meta nodes is 1)Private subnet 2 ID.
    Type: String
  PrivateSubnet3AID:
    Description: (Please ignore if the number of Meta nodes is 1)Private subnet 3 ID.
    Type: String
  PublicSubnet1ID:
    Description:  Public subnet 1 ID.
    Type: String
  PublicSubnet2ID:
    Description:  (Please ignore if the number of Meta nodes is 1)Public subnet 2 ID.
    Type: String
  PublicSubnet3ID:
    Description:  (Please ignore if the number of Meta nodes is 1)Public subnet 3 ID.
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x.
    Description: Allowed CIDR block for external Secure Shell (SSH) access to bastion hosts.
    Default: 0.0.0.0/0
    Type: String
  KeyPairName:
    Description: Key pairs allow you to connect to your instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
  AccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid IP range in the form x.x.x.x/x.
    Description: CIDR IP range permitted to access NebulaGraph instances. A value of 0.0.0.0/0 allows access from any IP address.
    Default: 10.0.0.0/16
    Type: String
  BastionAMIOS:
    AllowedValues:
      - Amazon-Linux2-HVM
      - CentOS-7-HVM
      - Ubuntu-Server-20.04-LTS-HVM
      - SUSE-SLES-15-HVM
    Default: Amazon-Linux2-HVM
    Description: Linux distribution for the AMI to be used for bastion instances.
    Type: String
  BastionInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: t2.micro
    Description: Amazon EC2 instance type for bastion instances.
    Type: String
  NebulaGraphVersion:
    Default: 3.1.1
    Description: NebulaGraph version.
    Type: String
  ClusterName:
    Default: nebula
    Description: NebulaGraph cluster name.
    Type: String
  GraphNodeCount:
    AllowedValues:
      - 1
      - 2
      - 3
    Default: 1
    Description: Number of Graph nodes. It is strongly recommended to have a minimum 2 Graph nodes in order to ensure high availability.
    Type: Number
  GraphInstanceType:
    Description: Amazon EC2 instance type for the Graph nodes.
    Type: String
    Default: t3.large
    AllowedValues:
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m6i.large
      - m6i.xlarge
      - m6i.2xlarge
      - m6i.4xlarge
      - m6i.8xlarge
      - m6i.12xlarge
      - m6i.16xlarge
      - m6i.24xlarge
      - m6i.32xlarge
      - m6i.metal
      - m6a.large
      - m6a.xlarge
      - m6a.2xlarge
      - m6a.4xlarge
      - m6a.8xlarge
      - m6a.12xlarge
      - m6a.16xlarge
      - m6a.24xlarge
      - m6a.32xlarge
      - m6a.48xlarge
      - m6a.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5a.16xlarge
      - m5a.24xlarge
      - m5n.large
      - m5n.xlarge
      - m5n.2xlarge
      - m5n.4xlarge
      - m5n.8xlarge
      - m5n.12xlarge
      - m5n.16xlarge
      - m5n.24xlarge
      - m5n.metal
      - m5zn.large
      - m5zn.xlarge
      - m5zn.2xlarge
      - m5zn.3xlarge
      - m5zn.6xlarge
      - m5zn.12xlarge
      - m5zn.metal
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.8xlarge
      - r5a.12xlarge
      - r5a.16xlarge
      - r5a.24xlarge
      - r6i.large
      - r6i.xlarge
      - r6i.2xlarge
      - r6i.4xlarge
      - r6i.8xlarge
      - r6i.12xlarge
      - r6i.16xlarge
      - r6i.24xlarge
      - r6i.32xlarge
      - r6i.metal
  GraphVolumeType:
    Type: String
    Description: Amazon EBS data-volume type (e.g., gp2, gp3, io1 and io2) to be attached to Graph node.
    Default: gp2
    AllowedValues:
      - gp2
      - gp3
      - io1
      - io2
  GraphVolumeSize:
    Description: 'Amazon EBS data-volume to be attached to Graph node in GBs, range of values [20-40].'
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 40
  MetaNodeCount:
    AllowedValues:
      - 1
      - 3
    Default: 1
    Description: Number of Meta nodes.  It is strongly recommended to have a 3 meta nodes in order to ensure high availability.
    Type: Number
  MetaInstanceType:
    Description: Amazon EC2 instance type for the Meta nodes.
    Type: String
    Default: c5.large
    AllowedValues:
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5a.large
      - c5a.xlarge
      - c5a.2xlarge
      - c5a.4xlarge
      - c5a.8xlarge
      - c5a.12xlarge
      - c5a.16xlarge
      - c6a.large
      - c6a.xlarge
      - c6a.2xlarge
      - c6a.4xlarge
      - c6a.8xlarge
      - c6a.12xlarge
      - c6a.16xlarge
      - c6i.large
      - c6i.xlarge
      - c6i.2xlarge
      - c6i.4xlarge
      - c6i.8xlarge
      - c6i.12xlarge
      - c6i.16xlarge
  MetaVolumeType:
    Type: String
    Description: Amazon EBS data-volume type (e.g., gp2, gp3, io1 and io2) to be attached to Meta node.
    Default: gp2
    AllowedValues:
      - gp2
      - gp3
      - io1
      - io2
  MetaVolumeSize:
    Description: 'Amazon EBS data-volume to be attached to Meta node in GBs, range of values [20-40].'
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 40
  StorageNodeCount:
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
    Default: 1
    Description: Number of Storage nodes.
    Type: Number
  StorageInstanceType:
    Description: Amazon EC2 instance type for the Storage nodes.
    Type: String
    Default: c5.large
    AllowedValues:
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5a.large
      - c5a.xlarge
      - c5a.2xlarge
      - c5a.4xlarge
      - c5a.8xlarge
      - c5a.12xlarge
      - c5a.16xlarge
      - c6a.large
      - c6a.xlarge
      - c6a.2xlarge
      - c6a.4xlarge
      - c6a.8xlarge
      - c6a.12xlarge
      - c6a.16xlarge
      - c6i.large
      - c6i.xlarge
      - c6i.2xlarge
      - c6i.4xlarge
      - c6i.8xlarge
      - c6i.12xlarge
      - c6i.16xlarge
  StorageVolumeType:
    Type: String
    Description: Amazon EBS data-volume type (e.g., gp2, gp3, io1 and io2) to be attached to Storage node.
    Default: gp2
    AllowedValues:
      - gp2
      - gp3
      - io1
      - io2
  StorageVolumeSize:
    Description: 'Amazon EBS data-volume to be attached to Storage node in GBs, range of values [32-16384].'
    Type: Number
    Default: 32
    MinValue: 32
    MaxValue: 16384
  ExplorerInstanceType:
    Description: Amazon EC2 instance type for NebulaGraph Explorer node.
    Type: String
    Default: m5.large
    AllowedValues:
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
  EnableExplorer:
    Description: If false, the Explorer node will not be created, default true.
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slashes (/).
    Default: quickstart-nebulagraph-cluster/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slashes (/).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: Amazon Region where the Quick Start S3 bucket (QSS3BucketName) is
      hosted. If you use your own bucket, you must specify this value.
    Type: String
Mappings:
  AWSRegionArch2AMI:
    ap-northeast-1:
      HVM64: ami-0f8048fa3e3b9e8ff
    ap-northeast-2:
      HVM64: ami-0ea5eb4b05645aa8a
    ap-northeast-3:
      HVM64: ami-0ba140397329ef9ae
    ap-east-1:
      HVM64: ami-0d11fee2d69126ec1
    ap-south-1:
      HVM64: ami-0ecd7c3947c3e5de8
    ap-southeast-1:
      HVM64: ami-04ff9e9b51c1f62ca
    ap-southeast-2:
      HVM64: ami-0300dc03c13eb7660
    ap-southeast-3:
      HVM64: ami-00c5331644ad576ad
    ca-central-1:
      HVM64: ami-0665ce57d172e712e
    eu-central-1:
      HVM64: ami-0c9354388bb36c088
    eu-west-1:
      HVM64: ami-0d2a4a5d69e46ea0b
    eu-west-2:
      HVM64: ami-0bd2099338bc55e6d
    eu-west-3:
      HVM64: ami-0f7559f51d3a22167
    eu-south-1:
      HVM64: ami-0fbb3ea579c01e50b
    eu-north-1:
      HVM64: ami-012ae45a4a2d92750
    sa-east-1:
      HVM64: ami-0edc92075724775f7
    us-east-1:
      HVM64: ami-08d4ac5b634553e16
    us-east-2:
      HVM64: ami-0960ab670c8bb45f3
    us-west-1:
      HVM64: ami-01154c8b2e9a14885
    us-west-2:
      HVM64: ami-0ddf424f81ddb0720
    me-south-1:
      HVM64: ami-0b35873acba1a6ec3
    af-south-1:
      HVM64: ami-0ecd7c3947c3e5de8
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  EnableExplorerCondition: !Equals [!Ref EnableExplorer, 'true']
  3MetaNodesCondition: !Equals [!Ref MetaNodeCount, '3']
  IsChinaRegion: !Or
    - !Equals
      - !Ref 'AWS::Region'
      - cn-north-1
    - !Equals
      - !Ref 'AWS::Region'
      - cn-northwest-1
Resources:
  BastionStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref 'AWS::Region'
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        BastionAMIOS: !Ref BastionAMIOS
        BastionInstanceType: !Ref BastionInstanceType
        OSImageOverride: ''
        NumBastionHosts: 1
        KeyPairName: !Ref KeyPairName
        EnableTCPForwarding: 'true'
        PublicSubnet1ID: !Ref PublicSubnet1ID
        PublicSubnet2ID: !Ref PublicSubnet1ID
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        VPCID: !Ref VPCID
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-linux-bastion/'
  SecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/securitygroups.template.yaml
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref 'AWS::Region'
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        AccessCIDR: !Ref RemoteAccessCIDR
        VPCID: !Ref VPCID
        VPCCIDR: !Ref VPCCIDR
        BastionSecurityGroupID: !GetAtt BastionStack.Outputs.BastionSecurityGroupID
  NebulaGraphIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub ec2.${AWS::URLSuffix}
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: nebulagraph-policy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObjectVersion
                  - s3:DeleteObjectVersion
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:RestoreObject
                Resource: !Sub arn:aws:s3:::*/*
  NebulaGraphIAMProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'NebulaGraphIAMRole'
  MetaInterfacesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/meta-interface.template.yaml
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref 'AWS::Region'
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        PrivateSubnet1ID: !Ref PrivateSubnet1AID
        PrivateSubnet2ID: !If
          - 3MetaNodesCondition
          - !Ref PrivateSubnet2AID
          - !Ref PrivateSubnet1AID
        PrivateSubnet3ID: !If
          - 3MetaNodesCondition
          - !Ref PrivateSubnet3AID
          - !Ref PrivateSubnet1AID
        SecurityGroupID: !GetAtt SecurityGroupStack.Outputs.SecurityGroupID
        MetaNodeCount: !Ref MetaNodeCount
  GraphNodesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/graph-cluster.template.yaml
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref 'AWS::Region'
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        PrivateSubnet1ID: !Ref PrivateSubnet1AID
        PrivateSubnet2ID: !If
          - 3MetaNodesCondition
          - !Ref PrivateSubnet2AID
          - !Ref PrivateSubnet1AID
        PrivateSubnet3ID: !If
          - 3MetaNodesCondition
          - !Ref PrivateSubnet3AID
          - !Ref PrivateSubnet1AID
        SecurityGroupID: !GetAtt SecurityGroupStack.Outputs.SecurityGroupID
        IAMRoleName: !Ref NebulaGraphIAMRole
        IAMProfileID: !Ref NebulaGraphIAMProfile
        KeyPairName: !Ref KeyPairName
        GraphInstanceType: !Ref GraphInstanceType
        GraphNodeCount: !Ref GraphNodeCount
        VolumeSize: !Ref GraphVolumeSize
        VolumeType: !Ref GraphVolumeType
        MetaEndpoints: !GetAtt MetaInterfacesStack.Outputs.MetaEndpoints
        NebulaGraphVersion: !Ref NebulaGraphVersion
        QSS3BucketName: !If
          - UsingDefaultBucket
          - !Sub '${QSS3BucketName}-${AWS::Region}'
          - !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSS3BucketRegion: !If
          - UsingDefaultBucket
          - !Ref 'AWS::Region'
          - !Ref QSS3BucketRegion
  MetaNodesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/meta-cluster.template.yaml
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref 'AWS::Region'
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        IAMRoleName: !Ref NebulaGraphIAMRole
        IAMProfileID: !Ref NebulaGraphIAMProfile
        KeyPairName: !Ref KeyPairName
        MetaInstanceType: !Ref MetaInstanceType
        MetaNodeCount: !Ref MetaNodeCount
        NetworkInterface1ID: !GetAtt MetaInterfacesStack.Outputs.NetworkInterface1ID
        NetworkInterface2ID: !GetAtt MetaInterfacesStack.Outputs.NetworkInterface2ID
        NetworkInterface3ID: !GetAtt MetaInterfacesStack.Outputs.NetworkInterface3ID
        VolumeSize: !Ref GraphVolumeSize
        VolumeType: !Ref GraphVolumeType
        MetaEndpoints: !GetAtt MetaInterfacesStack.Outputs.MetaEndpoints
        NebulaGraphVersion: !Ref NebulaGraphVersion
        QSS3BucketName: !If
          - UsingDefaultBucket
          - !Sub '${QSS3BucketName}-${AWS::Region}'
          - !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSS3BucketRegion: !If
          - UsingDefaultBucket
          - !Ref 'AWS::Region'
          - !Ref QSS3BucketRegion
  StorageNodesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/storage-cluster.template.yaml
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref 'AWS::Region'
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        PrivateSubnet1ID: !Ref PrivateSubnet1AID
        PrivateSubnet2ID: !If
          - 3MetaNodesCondition
          - !Ref PrivateSubnet2AID
          - !Ref PrivateSubnet1AID
        PrivateSubnet3ID: !If
          - 3MetaNodesCondition
          - !Ref PrivateSubnet3AID
          - !Ref PrivateSubnet1AID
        SecurityGroupID: !GetAtt SecurityGroupStack.Outputs.SecurityGroupID
        IAMRoleName: !Ref NebulaGraphIAMRole
        IAMProfileID: !Ref NebulaGraphIAMProfile
        KeyPairName: !Ref KeyPairName
        StorageInstanceType: !Ref StorageInstanceType
        StorageNodeCount: !Ref StorageNodeCount
        VolumeSize: !Ref StorageVolumeSize
        VolumeType: !Ref StorageVolumeType
        MetaEndpoints: !GetAtt MetaInterfacesStack.Outputs.MetaEndpoints
        NebulaGraphVersion: !Ref NebulaGraphVersion
        QSS3BucketName: !If
          - UsingDefaultBucket
          - !Sub '${QSS3BucketName}-${AWS::Region}'
          - !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSS3BucketRegion: !If
          - UsingDefaultBucket
          - !Ref 'AWS::Region'
          - !Ref QSS3BucketRegion
  ExplorerInstance:
    Condition: EnableExplorerCondition
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: !Ref NebulaGraphIAMRole
          buckets: !If
            - UsingDefaultBucket
            - !Sub '${QSS3BucketName}-${AWS::Region}'
            - !Ref QSS3BucketName
      AWS::CloudFormation::Init:
        config:
          files:
            /tmp/explorer-install.sh:
              source:
                Fn::Sub:
                  - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/explorer-install.sh
                  - S3Bucket: !If
                      - UsingDefaultBucket
                      - !Sub '${QSS3BucketName}-${AWS::Region}'
                      - !Ref 'QSS3BucketName'
                    S3Region: !If
                      - UsingDefaultBucket
                      - !Ref 'AWS::Region'
                      - !Ref 'QSS3BucketRegion'
              mode: '000550'
              owner: root
              group: root
            /tmp/nebula-download:
              source:
                Fn::Sub:
                  - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/nebula-download
                  - S3Bucket: !If
                      - UsingDefaultBucket
                      - !Sub '${QSS3BucketName}-${AWS::Region}'
                      - !Ref 'QSS3BucketName'
                    S3Region: !If
                      - UsingDefaultBucket
                      - !Ref 'AWS::Region'
                      - !Ref 'QSS3BucketRegion'
              mode: '000550'
              owner: root
              group: root
          commands:
            01-install-explorer:
              cwd: '/tmp/'
              command: 'cd /tmp; sudo dos2unix *.sh; sudo bash explorer-install.sh'
    Properties:
      KeyName: !Ref KeyPairName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - HVM64
      IamInstanceProfile: !Ref NebulaGraphIAMProfile
      InstanceType: !Ref ExplorerInstanceType
      SubnetId: !Ref PublicSubnet1ID
      SecurityGroupIds:
        - !GetAtt SecurityGroupStack.Outputs.SecurityGroupID
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '80'
            VolumeType: gp2
            DeleteOnTermination: true
            Encrypted: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Explorer
        - Key: AppName
          Value: 'NebulaExplorer'
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash -xe

          export PATH=$PATH:/usr/local/bin

          cfn_fail()
          {
              cfn-signal -e 1 --stack ${AWS::StackId} --region ${AWS::Region} --resource ExplorerInstance
              exit 1
          }

          cfn_success()
          {
              cfn-signal -e 0 --stack ${AWS::StackId} --region ${AWS::Region} --resource ExplorerInstance
              exit 0
          }
          apt update -y
          apt install git dos2unix -y
          until git clone https://github.com/aws-quickstart/quickstart-linux-utilities.git ; do echo "Retrying"; done
          cd quickstart-linux-utilities
          source quickstart-cfn-tools.source
          qs_update-os || qs_err
          qs_bootstrap_pip || qs_err " pip bootstrap failed "
          qs_aws-cfn-bootstrap || qs_err " cfn bootstrap failed "
          cfn-init -v --stack ${AWS::StackId} --resource ExplorerInstance --region ${AWS::Region} || cfn_fail
          [ $(qs_status) == 0 ] && cfn_success || cfn_fail
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: 'PT5M'
  NlbStack:
    Condition: EnableExplorerCondition
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/nlb.template.yaml
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref 'AWS::Region'
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        VPCID: !Ref VPCID
        Subnets: !Join
          - ','
          - !Ref PublicSubnet1ID
        Port: '7002'
        ExplorerInstanceID: !Ref ExplorerInstance
Outputs:
  BastionEIP:
    Description: Elastic IP for Bastion
    Value: !GetAtt BastionStack.Outputs.EIP1
  ExplorerPortal:
    Condition: EnableExplorerCondition
    Description: The Explorer service web portal.
    Value: !Sub [ 'http://${ExplorerNodeIP}:7002', { ExplorerNodeIP: !GetAtt ExplorerInstance.PublicIp } ]
  GraphPrivteIP1:
    Description: Private IP Address of Graph Node 1
    Value: !GetAtt GraphNodesStack.Outputs.GraphInstance1PrivateIP
  GraphPrivteIP2:
    Description: Private IP Address of Graph Node 2
    Value: !GetAtt GraphNodesStack.Outputs.GraphInstance2PrivateIP
  GraphPrivteIP3:
    Description: Private IP Address of Graph Node 3
    Value: !GetAtt GraphNodesStack.Outputs.GraphInstance3PrivateIP